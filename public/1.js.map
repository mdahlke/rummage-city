{"version":3,"sources":["webpack:///./resources/js/config/store.js"],"names":["store","Vuex","Store","state","count","listings","listing","search","getters","getListingById","id","find","savedListings","filter","saved","savedListingsCount","mutations","initialiseStore","localStorage","getItem","replaceState","Object","assign","JSON","parse","subscribe","mutation","setItem","stringify"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAEA,IAAMA,KAAK,GAAG,IAAIC,4CAAI,CAACC,KAAT,CAAe;AACzBC,OAAK,EAAE;AACHC,SAAK,EAAE,CADJ;AAEHC,YAAQ,EAAE,EAFP;AAGHC,WAAO,EAAE,EAHN;AAIHC,UAAM,EAAE;AAJL,GADkB;AAOzBC,SAAO,EAAE;AACLC,kBAAc,EAAE,wBAACT,KAAD;AAAA,aAAW,UAACU,EAAD,EAAQ;AAC/B,eAAOP,KAAK,CAACE,QAAN,CAAeM,IAAf,CAAoB,UAAAL,OAAO;AAAA,iBAAIA,OAAO,CAACI,EAAR,KAAeA,EAAnB;AAAA,SAA3B,CAAP;AACH,OAFe;AAAA,KADX;AAILE,iBAAa,EAAE,uBAAAZ,KAAK,EAAI;AACpB,aAAOA,KAAK,CAACK,QAAN,CAAeQ,MAAf,CAAsB,UAAAP,OAAO;AAAA,eAAIA,OAAO,CAACQ,KAAZ;AAAA,OAA7B,CAAP;AACH,KANI;AAOLC,sBAAkB,EAAE,4BAACf,KAAD,EAAQQ,OAAR,EAAoB;AACpC,aAAOA,OAAO,CAACI,aAAR,CAAsBR,KAA7B;AACH;AATI,GAPgB;AAkBzBY,WAAS,EAAE;AACPC,mBADO,2BACSd,KADT,EACgB;AACnB;AACA,UAAIe,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B;AACA,aAAKC,YAAL,CACIC,MAAM,CAACC,MAAP,CAAcnB,KAAd,EAAqBoB,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CADJ;AAGH;AACJ,KATM;AAUPb,WAVO,mBAUCH,KAVD,EAUQG,QAVR,EAUiB;AACpBH,WAAK,CAACG,OAAN,GAAgBA,QAAhB;AACH,KAZM;AAaPD,YAbO,oBAaEF,KAbF,EAaSE,SAbT,EAamB;AACtBF,WAAK,CAACE,QAAN,GAAiBA,SAAjB;AACH,KAfM;AAgBPE,UAhBO,kBAgBAJ,KAhBA,EAgBOI,OAhBP,EAgBe;AAClBJ,WAAK,CAACI,MAAN,GAAeA,OAAf;AACH;AAlBM;AAlBc,CAAf,CAAd;AAwCAP,KAAK,CAACyB,SAAN,CAAgB,UAACC,QAAD,EAAWvB,KAAX,EAAqB;AACjC;AACAe,cAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAezB,KAAf,CAA9B;AACH,CAHD;AAKeH,oEAAf,E","file":"1.js","sourcesContent":["import Vuex from \"vuex\";\n\nconst store = new Vuex.Store({\n    state: {\n        count: 0,\n        listings: [],\n        listing: {},\n        search: {},\n    },\n    getters: {\n        getListingById: (store) => (id) => {\n            return state.listings.find(listing => listing.id === id);\n        },\n        savedListings: store => {\n            return store.listings.filter(listing => listing.saved);\n        },\n        savedListingsCount: (store, getters) => {\n            return getters.savedListings.count;\n        }\n    },\n    mutations: {\n        initialiseStore(state) {\n            // Check if the ID exists\n            if (localStorage.getItem('store')) {\n                // Replace the state object with the stored item\n                this.replaceState(\n                    Object.assign(state, JSON.parse(localStorage.getItem('store')))\n                );\n            }\n        },\n        listing(state, listing) {\n            state.listing = listing;\n        },\n        listings(state, listings) {\n            state.listings = listings;\n        },\n        search(state, search) {\n            state.search = search;\n        }\n    }\n});\n\nstore.subscribe((mutation, state) => {\n    // Store the state object as a JSON string\n    localStorage.setItem('store', JSON.stringify(state));\n});\n\nexport default store;\n"],"sourceRoot":""}